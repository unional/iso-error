name: Node CI

on:
  push:
    branches:
      - master
      - "greenkeeper/*"
  pull_request:
    types: [opened, synchronize]
jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: setup node-env
        run: echo "env"
      - name: cache yarn global cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache yarn global cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn commitlint-circle
      - run: yarn lint
      - run: yarn build
      - run: yarn dependency-check
  test:
    runs-on: ${{ matrix.os }}
    needs: install
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        node-version: [8, 10, 12]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache yarn global cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn coverage --maxWorkers=2
      - run: yarn codecov
        if: matrix.node-version == '12' && runner.os == 'ubuntu-latest'
  release:
    name: release
    runs-on: ubuntu-latest
    if: github.ref == 'master'
    needs:
      - test-latest
      - test-others
    steps:
      - uses: actions/checkout@v1
      - name: setup yarn-cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: cache yarn global cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: yarn build
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
